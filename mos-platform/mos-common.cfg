# Common Clang arguments for all targets.

--target=mos

# Default to full link-time-optimization. This provides code generation much
# more akin to what a ASM programmer will do by hand: callers and callees are
# optimized together. The downside is compile performance, but binaries are
# nearly always less than 64K, so this isn't much of a problem.
-flto

# All bitcode libcalls are included in LTO, since they may become used once
# code is generated. If any are unused, each will be emitted into its own
# section, so section-level GC will remove the remainder. This is also
# generally a good idea for a system as space-constrained as MOS, but it does
# require users to be aware that they may need to mark sections as retained if
# they're not directly referenced (e.g., headers for linker script use).
-Wl,--gc-sections

-isystem <CFGDIR>/../mos-platform/common/include
-L<CFGDIR>/../mos-platform/common/ldscripts
